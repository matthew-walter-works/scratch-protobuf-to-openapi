from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.person_phone_number import PersonPhoneNumber
from openapi_server import util

from openapi_server.models.person_phone_number import PersonPhoneNumber  # noqa: E501

class Person(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, id=None, email=None, phones=None, last_updated=None):  # noqa: E501
        """Person - a model defined in OpenAPI

        :param name: The name of this Person.  # noqa: E501
        :type name: str
        :param id: The id of this Person.  # noqa: E501
        :type id: int
        :param email: The email of this Person.  # noqa: E501
        :type email: str
        :param phones: The phones of this Person.  # noqa: E501
        :type phones: List[PersonPhoneNumber]
        :param last_updated: The last_updated of this Person.  # noqa: E501
        :type last_updated: datetime
        """
        self.openapi_types = {
            'name': str,
            'id': int,
            'email': str,
            'phones': List[PersonPhoneNumber],
            'last_updated': datetime
        }

        self.attribute_map = {
            'name': 'name',
            'id': 'id',
            'email': 'email',
            'phones': 'phones',
            'last_updated': 'lastUpdated'
        }

        self._name = name
        self._id = id
        self._email = email
        self._phones = phones
        self._last_updated = last_updated

    @classmethod
    def from_dict(cls, dikt) -> 'Person':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Person of this Person.  # noqa: E501
        :rtype: Person
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Person.


        :return: The name of this Person.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Person.


        :param name: The name of this Person.
        :type name: str
        """

        self._name = name

    @property
    def id(self) -> int:
        """Gets the id of this Person.


        :return: The id of this Person.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Person.


        :param id: The id of this Person.
        :type id: int
        """

        self._id = id

    @property
    def email(self) -> str:
        """Gets the email of this Person.


        :return: The email of this Person.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this Person.


        :param email: The email of this Person.
        :type email: str
        """

        self._email = email

    @property
    def phones(self) -> List[PersonPhoneNumber]:
        """Gets the phones of this Person.


        :return: The phones of this Person.
        :rtype: List[PersonPhoneNumber]
        """
        return self._phones

    @phones.setter
    def phones(self, phones: List[PersonPhoneNumber]):
        """Sets the phones of this Person.


        :param phones: The phones of this Person.
        :type phones: List[PersonPhoneNumber]
        """

        self._phones = phones

    @property
    def last_updated(self) -> datetime:
        """Gets the last_updated of this Person.


        :return: The last_updated of this Person.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated: datetime):
        """Sets the last_updated of this Person.


        :param last_updated: The last_updated of this Person.
        :type last_updated: datetime
        """

        self._last_updated = last_updated
