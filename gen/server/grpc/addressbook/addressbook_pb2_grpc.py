# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import addressbook_pb2 as addressbook__pb2

GRPC_GENERATED_VERSION = '1.67.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in addressbook_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AddressBookServiceStub(object):
    """Define a service to expose HTTP endpoints for the address book.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPerson = channel.unary_unary(
                '/tutorial.AddressBookService/GetPerson',
                request_serializer=addressbook__pb2.GetPersonRequest.SerializeToString,
                response_deserializer=addressbook__pb2.Person.FromString,
                _registered_method=True)
        self.ListPeople = channel.unary_unary(
                '/tutorial.AddressBookService/ListPeople',
                request_serializer=addressbook__pb2.ListPeopleRequest.SerializeToString,
                response_deserializer=addressbook__pb2.AddressBook.FromString,
                _registered_method=True)
        self.AddPerson = channel.unary_unary(
                '/tutorial.AddressBookService/AddPerson',
                request_serializer=addressbook__pb2.Person.SerializeToString,
                response_deserializer=addressbook__pb2.AddPersonResponse.FromString,
                _registered_method=True)


class AddressBookServiceServicer(object):
    """Define a service to expose HTTP endpoints for the address book.
    """

    def GetPerson(self, request, context):
        """Get a person by their ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPeople(self, request, context):
        """List all people in the address book
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPerson(self, request, context):
        """Add a new person to the address book
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AddressBookServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPerson': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPerson,
                    request_deserializer=addressbook__pb2.GetPersonRequest.FromString,
                    response_serializer=addressbook__pb2.Person.SerializeToString,
            ),
            'ListPeople': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPeople,
                    request_deserializer=addressbook__pb2.ListPeopleRequest.FromString,
                    response_serializer=addressbook__pb2.AddressBook.SerializeToString,
            ),
            'AddPerson': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPerson,
                    request_deserializer=addressbook__pb2.Person.FromString,
                    response_serializer=addressbook__pb2.AddPersonResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tutorial.AddressBookService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('tutorial.AddressBookService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AddressBookService(object):
    """Define a service to expose HTTP endpoints for the address book.
    """

    @staticmethod
    def GetPerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tutorial.AddressBookService/GetPerson',
            addressbook__pb2.GetPersonRequest.SerializeToString,
            addressbook__pb2.Person.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListPeople(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tutorial.AddressBookService/ListPeople',
            addressbook__pb2.ListPeopleRequest.SerializeToString,
            addressbook__pb2.AddressBook.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddPerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tutorial.AddressBookService/AddPerson',
            addressbook__pb2.Person.SerializeToString,
            addressbook__pb2.AddPersonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
